<Return>
demo(graphics)
> g <- gl(n, 100, n*100)
> x <- rnorm(n*100) + sqrt(as.numeric(g))
> boxplot(split(x,g), col="lavender", notch=TRUE)
boxplot(split(x,g), col="lavender", notch=TRUE)
title(main = "January Pie Sales", cex.main = 1.8, font.main = 1)
title(xlab = "(Don't try this at home kids)", cex.lab = 0.8, font.lab = 3)
## Boxplots:  I couldn't resist the capability for filling the "box".
## The use of color seems like a useful addition, it focuses attention
## on the central bulk of the data.
par(bg="cornsilk")
n <- 10
g <- gl(n, 100, n*100)
x <- rnorm(n*100) + sqrt(as.numeric(g))
boxplot(split(x,g), col="lavender", notch=TRUE)
title(main = "January Pie Sales", cex.main = 1.8, font.main = 1)
title(main = "January Pie Sales", cex.main = 1.8, font.main = 1)
title(xlab = "(Don't try this at home kids)", cex.lab = 0.8, font.lab = 3)
## Boxplots:  I couldn't resist the capability for filling the "box".
## The use of color seems like a useful addition, it focuses attention
## on the central bulk of the data.
par(bg="cornsilk")
n <- 10
g <- gl(n, 100, n*100)
x <- rnorm(n*100) + sqrt(as.numeric(g))
boxplot(split(x,g), col="lavender", notch=TRUE)
demo(graphics)
title(main = "A Sample Color Wheel", cex.main = 1.4, font.main = 3)
title(xlab = "(Use this as a test of monitor linearity)", cex.lab = 0.8, font.lab = 3)
## We have already confessed to having these.  This is just showing off X11
## color names (and the example (from the postscript manual) is pretty "cute".
pie.sales <- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)
names(pie.sales) <- c("Blueberry", "Cherry", "Apple", "Boston Cream", "Other", "Vanilla Cream")
pie(pie.sales, col = c("purple","violetred1","green3","cornsilk","cyan","white"))
title(main = "A Sample Color Wheel", cex.main = 1.4, font.main = 3)
title(xlab = "(Use this as a test of monitor linearity)", cex.lab = 0.8, font.lab = 3)
## We have already confessed to having these.  This is just showing off X11
## color names (and the example (from the postscript manual) is pretty "cute".
pie.sales <- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)
names(pie.sales) <- c("Blueberry", "Cherry", "Apple", "Boston Cream", "Other", "Vanilla Cream")
pie(pie.sales, col = c("purple","violetred1","green3","cornsilk","cyan","white"))
?device
dev.list()
layout.show(3)
m <- matrix(c(1:3, 3), 2, 2) > layout(m)
layout.show(3)
layout.show(3)
par(bg="yellow")
?par
plot(x, y)
x <- rnorm(10)
y <- rnorm(10)
plot(x, y)
x <- rnorm(10)
y <- rnorm(10)
plot(x, y)
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow", bty="l", tcl=0.4,
main="How to customize a plot with R", las=1, cex=1.5)
main="How to customize a plot with R", las=1, cex=1.5)
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="blue", bty="l", tcl=0.4,
main="How to customize a plot with R", las=1, cex=1.5)
main="How to customize a plot with R", las=1, cex=1.5)
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="blue", bty="l", tcl=0.4,
main="How to customize a plot with R" las=1, cex=1.5)
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="blue", bty="l", tcl=0.4,
main="How to customize a plot with R", las=1, cex=1.5)
main="How to customize a plot with R", las=1, cex=1.5)
par(bg="green")
plot(x, y, xlab="Ten random values", ylab="Ten other values", bg="green", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="blue", bty="l", tcl=0.4,
main="How to customize a plot with R", las=1, cex=1.5)
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25)) plot(x, y, xlab="Ten random values", ylab="Ten other values",
xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow",
bty="l", tcl=-.25, las=1, cex=1.5)
title("How to customize a plot with R (bis)", font.main=3, adj=1) par(opar)
opar <- par()
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25))
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow", bty="l", tcl=-.25, las=1, cex=1.5)
opar <- par()
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25))
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow", bty="l", tcl=-.25, las=1, cex=1.5)
par(opar)
par(opar)
opar <- par()
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25))
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow", bty="l", tcl=-.25, las=1, cex=1.5)
par(opar)
opar <- par()
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25))
plot(x, y, xlab="Ten random values", ylab="Ten other values",
xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow",
bty="l", tcl=-.25, las=1, cex=1.5)
par(opar)
par(opar)
warnings()
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow", bty="l", tcl=0.4,
main="How to customize a plot with R", las=1, cex=1.5)
opar <- par()
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25))
plot(x, y, xlab="Ten random values", ylab="Ten other values",
xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow",
bty="l", tcl=-.25, las=1, cex=1.5)
par(opar)
par(opar)
opar <- par()
par(bg="lightgray", mar=c(2.5, 1.5, 2.5, 0.25))
plot(x, y, type="n", xlab="", ylab="", xlim=c(-2, 2), ylim=c(-2, 2), xaxt="n", yaxt="n")
points(x, y, pch=10, col="red", cex=2)
axis(side=1, c(-2, 0, 2), tcl=-0.2, labels=FALSE)
axis(side=2, -1:1, tcl=-0.2, labels=FALSE)
title("How to customize a plot with R (ter)", font.main=4, adj=1, cex.main=1)
mtext("Ten random values", side=1, line=1, at=1, cex=0.9, font=3)
mtext("Ten other values", line=0.5, at=-1.8, cex=0.9, font=3) mtext(c(-2, 0, 2), side=1, las=1, at=c(-2, 0, 2), line=0.3, col="blue", cex=0.9)
mtext(-1:1, side=2, las=1, at=-1:1, line=0.2, col="blue", cex=0.9)
par(opar)
par(mfrow=c(2,2))
u=seq(-3.5,3.5,length=1000)
plot(u,dnorm(u),type="l",col="red",lwd=2,main="normal(0,1) density",ylab="",xlab="")
u=seq(0,5,length=1000)
plot(u,dexp(u),type="l",col="blue",lwd=2,main="exponential(1) density",ylab="",xlab="")
u=seq(-1,2,length=1000)
plot(u,dunif(u),type="l",col="green",lwd=2,main="uniform(0,1) density",ylab="",xlab="")
u=seq(0,20,length=1000)
plot(u,dgamma(u,3,1/2),type="l",col="purple",lwd=2,main="Gamma(3,1/2) density",ylab="",xlab="")
x=3
x<-5
x
x==3
x==5
x==3; x==5
y=c(x,9)
x=3
y
y=c(x,6)
y
y
1:10
seq(0,10,length=40)
rep(2,5)
rep(1:3,5)
y=c(1.4,1.6,7.5,3.1,9.5,1.0,3.8,2)
y
length(y)
10:1
seq(0,10,length=40)
y[2]
y[c(1,4,5)]
y[3]
y
y[0]
y[1]
y[-1]
y<4
y[y<4]
which(y>2)
y>2
y[y>2]
y[3,4,5,7]
y[3]
y[c(3,4,5,7)]
y=c(1.4,1.6,7.5,3.1,9.5,1.0,3.8,2)
y[c(1,4,5)]
y>2
which(y>2)
y[c(which(y>2))]
which(y>2)
y[c(3,4,5,7)]
y[c(which(y>2))]
matrix(1:6,nrow=2); matrix(1:6,ncol=3)
M=matrix(1:6,ncol=3,byrow=TRUE); M
dim(M); nrow(M); ncol(M)
M[2,3]; M[,3]; M[2,]; M[1,1:2]
t(M); A+B; A-B; A%*%B
t(M)
m
M
help(boxplot); boxplot(y)
z=c(2.7,4.3,9.5,1.4,5.5,7.2); boxplot(y,z)
y
boxplot(y)
boxplot(x)
z=c(2.7,4.3,9.5,1.4,5.5,7.2); boxplot(y,z)
x=seq(0,10,length=30); x
y=sin(x); y
plot(x,sin(x))
plot(x,sin(x),type="l",xlab="x",ylab="sin(x)")
x=seq(0,10,length=300)
plot(x,sin(x),type="l")
plot(x,y,main="Plot",xlab="x",ylab="y",pch=20,cex=1.5,col="blue")
x=seq(0,10,length=30); x
y=sin(x); y
plot(x,y,main="Plot",xlab="x",ylab="y",pch=20,cex=1.5,col="blue")
colors()
points(x,cos(x),pch=15,col="red")
abline(v=1,lty=2,lwd=2)
abline(a=50, b=5)
z=seq(from=0,to=1.2,by=0.01); f=212.68*x/(0.06412+x)
lines(z,f,col="blue",lwd=1.5)
plot(x,y,main="Plot",xlab="x",ylab="y",pch=20,cex=1.5,col="blue")
z=seq(from=0,to=1.2,by=0.01); f=212.68*x/(0.06412+x)
lines(z,f,col="blue",lwd=1.5)
2*3-7; 2^3
y^3
4*(3:9)
mean(y)
y
vat(y)
var(y)
sum((y-mean(y))^2)/(length(y)-1)
sort(y); sample(y)
median(y)
?functionName
??functionName
x=rnorm(100)
x
hist(x,prob=TRUE)
x=rbinom(1,30,0.5)
x
for (i in 1:10) print(i)
m=numeric(500)
for (i in 1:500) m[i]=mean(rexp(25))
hist(m)
lines(u,dnorm(u,mean(m),sqrt(var(m))))
hist(m,prob=TRUE)
u=seq(min(m),max(m),length=100)
lines(u,dnorm(u,mean(m),sqrt(var(m))))
hist(rexp(500))
hist(m,prob=TRUE)
u=seq(min(m),max(m),length=100)
lines(u,dnorm(u,mean(m),sqrt(var(m))))
data=read.table(file="mortality.txt",header=TRUE)
data=read.table(file="mortality.txt",header=TRUE)
data=read.table(file="mortality.txt",header=TRUE)
data=read.table(file="mortality.txt",header=TRUE)
data=read.table(file="mortality.txt",header=TRUE)
---
title: "Assignment 1"
summary(cars)
data_read_1 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/birthweight.txt",header=TRUE)
summary(data_read_1)
install.packages("tinytex")
---
title: "Assignment 1"
#### Exercise 1.1 ####
tinytex::install_tinytex()
x=rep(c("A","B"),each=5); x
sample(x)
x=rnorm(100)
x=rep(c("A","B"),each=5); x
sample(x)
x=rnorm(100)
data_read_1 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/birthweight.txt",header=TRUE)
summary(data_read_1)
par(mfrow=c(1,2));hist(birthweight);qqnorm(birthweight)
par(mfrow=c(1,2));hist(data_read_1$birthweight);qqnorm(data_read_1$birthweight)
mean(data_read_1)
summary(data_read_1)
mean(data_read_1)
round(mean(birthweight),3)
data_read_1 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/birthweight.txt",header=TRUE)
# head(data_read_1) how does the data looks like
birthweight = data_read_1$birthweight
# compute the mean
m = round(mean(birthweight),3); m
round(mean(birthweight),3)
par(mfrow=c(1,2));hist(data_read_1$birthweight);qqnorm(data_read_1$birthweight)
par(mfrow=c(1,2));hist(data_read_1$birthweight, main="Histogram birthweight.txt");qqnorm(data_read_1$birthweight, main="QQ-plot birthweight.txt")
par(mfrow=c(1,3));hist(data_read_1$birthweight, main="Histogram birthweight", xlab="birth rate teenagers",ylab="mortality rate");boxplot(data_read_1$birthweight, main="Histogram birthweight", xlab="birth rate teenagers",ylab="mortality rate");qqnorm(data_read_1$birthweight, main="QQ-plot birthweight", xlab="birth rate teenagers",ylab="mortality rate")
par(mfrow=c(1,3));hist(data_read_1$birthweight, main="Histogram birthweight", xlab="birth rate teenagers",ylab="mortality rate");boxplot(data_read_1$birthweight, main="Boxplot birthweight", xlab="birth rate teenagers",ylab="mortality rate");qqnorm(data_read_1$birthweight, main="QQ-plot birthweight", xlab="birth rate teenagers",ylab="mortality rate")
data_read_1 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/birthweight.txt",header=TRUE)
data_read_1
data_read_1 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/birthweight.txt",header=TRUE)
birthweight = data_read_1$birthweight
data_read_1 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/birthweight.txt",header=TRUE)
birthweight = data_read_1$birthweight
par(mfrow=c(1,3));hist(data_read_1$birthweight, main="Histogram birthweight", xlab="birth rate teenagers",ylab="mortality rate");boxplot(data_read_1$birthweight, main="Boxplot birthweight", xlab="birth rate teenagers",ylab="mortality rate");qqnorm(data_read_1$birthweight, main="QQ-plot birthweight", xlab="birth rate teenagers",ylab="mortality rate")
par(mfrow=c(1,3));hist(data_read_1$birthweight, main="Histogram birthweight", xlab="birth rate teenagers",ylab="mortality rate");boxplot(data_read_1$birthweight, main="Boxplot birthweight");qqnorm(data_read_1$birthweight, main="QQ-plot birthweight")
par(mfrow=c(1,3));hist(data_read_1$birthweight, main="Histogram birthweight");boxplot(data_read_1$birthweight, main="Boxplot birthweight");qqnorm(data_read_1$birthweight, main="QQ-plot birthweight")
data_read_1 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/birthweight.txt",header=TRUE)
birthweight = data_read_1$birthweight
data_read_1 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/birthweight.txt",header=TRUE)
birthweight = data_read_1$birthweight
data_read_1 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/birthweight.txt",header=TRUE)
data_read_1 = read.table("../birthweight.txt",header=TRUE)
data_read_1 = read.table("/../birthweight.txt",header=TRUE)
data_read_1 = read.table("..\birthweight.txt",header=TRUE)
data_read_1 = read.table("./birthweight.txt",header=TRUE)
par(mfrow=c(1,3));hist(data_read_1$birthweight, main="Histogram birthweight");boxplot(data_read_1$birthweight, main="Boxplot birthweight");qqnorm(data_read_1$birthweight, main="QQ-plot birthweight")
round(summary(data_read_1),2)
summary(round(data_read_1, 2)
summary(data_read_1)
round(mean(data_read_1$birthweight),3)
c(length(data_read_1$birthweight), sd(data_read_1$birthweight), qt(0.95,df=n-1))
c(length(data_read_1$birthweight), sd(data_read_1$birthweight), qt(0.95,df=length(data_read_1$birthweight)-1))
c(round(length(data_read_1$birthweight)3), sd(data_read_1$birthweight), qt(0.95,df=length(data_read_1$birthweight)-1))
c(round(length(data_read_1$birthweight),3), sd(data_read_1$birthweight), qt(0.95,df=length(data_read_1$birthweight)-1))
c(round(length(data_read_1$birthweight),3), sd(data_read_1$birthweight), qt(0.95,df=length(data_read_1$birthweight)-1))
c(round(length(data_read_1$birthweight),3), round(sd(data_read_1$birthweight),2), qt(0.95,df=length(data_read_1$birthweight)-1))
format(c(length(data_read_1$birthweight), sd(data_read_1$birthweight), qt(0.95,df=length(data_read_1$birthweight)-1)), digits = 2)
format(c(length(data_read_1$birthweight), sd(data_read_1$birthweight), qt(0.95,df=length(data_read_1$birthweight)-1)), digits = 3)
round(mean(data_read_1$birthweight),2)
format(summary(data_read_1), digits = 3)
summary(data_read_1)
format(c("Length: " length(data_read_1$birthweight), sd(data_read_1$birthweight), qt(0.95,df=length(data_read_1$birthweight)-1)), digits = 3)
format(c(length(data_read_1$birthweight), sd(data_read_1$birthweight), qt(0.95,df=length(data_read_1$birthweight)-1)), digits = 3)
format(length(data_read_1$birthweight), digits = 3)
format(c(length(data_read_1$birthweight)), digits = 3)
format(c(length(data_read_1$birthweight)), digits = 3)
format(c(length(data_read_1$birthweight), sd(data_read_1$birthweight), qt(0.95,df=length(data_read_1$birthweight)-1)), digits = 3)
length(data_read_1$birthweight)
qt(0.95,df=length(data_read_1$birthweight)-1))
qt(0.95,df=length(data_read_1$birthweight)-1)
sd(data_read_1$birthweight)
s = sd(data_read_1$birthweight)
s = sd(data_read_1$birthweight)
s
c(m-t*s/sqrt(n),m+t*s/sqrt(n))
l = length(data_read_1$birthweight)
l
s = sd(data_read_1$birthweight)
s
t = qt(0.95,df=length(data_read_1$birthweight)-1)
t
c(m-t*s/sqrt(n),m+t*s/sqrt(n))
m = round(mean(data_read_1$birthweight),2)
m
n = length(data_read_1$birthweight)
n
c(m-t*s/sqrt(n),m+t*s/sqrt(n))
t = qt(0.95,df=length(data_read_1$birthweight)-1)
t
t = qt(0.95,df=length(data_read_1$birthweight)-1)
t
s = format(sd(data_read_1$birthweight), digits = 3)
s
s = sd(data_read_1$birthweight)
s
mu=0.2
n = length(data_read_1$birthweight) # calculates the length
s = round(sd(data_read_1$birthweight), 3) # calculates standard deviation
t = round(qt(0.95,df=length(data_read_1$birthweight)-1),3)   # calculates test statistic
round(c(m-t*s/sqrt(n),m+t*s/sqrt(n)), 3) # 90% confidence interval
sense = data_read_4$Sense
data_read_4 = read.table("./austen.txt",header=TRUE)
sense = data_read_4$Sense
emma = data_read_4$Emma
sand1 = data_read_4$Sand1
x=as.data.frame(matrix(c(sense, emma, sand1),ncol=3,nrow=6))
dimnames(x)=list(c("a","an", "this", "that", "with", "without"),c("sense","emma", "sand1"))
x
source("~/.active-rstudio-document", echo=TRUE)
x = 140
n = 200
p_hat = 140 /200
p_hat
x = 140
n = 200
p_hat = 140 /200
p_hat
p_hat = 0.7
q_hat = 1-p_hat
n = 200
alpha = 1 - 0.99
z_alpha2 = qnorm(1 - alpha/2)
margin_of_error = z_alpha2 * sqrt ((p_hat * q_hat) / n)
round(c(p_hat - margin_of_error, p_hat + margin_of_error), 3)
binom.test(140, 200, p = 0.75)
weather = read.table(file="weather.txt", header=TRUE)
hum=weather$humidity
tem=weather$temperature
par(mfrow=c(2,3))
hist(hum, main="Histogram humidity")
boxplot(hum, main="Boxplot humidity")
qqnorm(hum, main="QQ-plot humidity")
hist(tem, main="Histogram temperature")
boxplot(tem, main="Boxplot temperature")
qqnorm(tem, main="QQ-plot temperature")
summary(weather)
qqnorm(tem, main="QQ-plot of temperature")
alpha = 0.10
n = length(weather$temperature)
m = mean(weather$temperature)
s = sd(weather$temperature)
t = qt(1 - alpha / 2, df=n - 1)
c(m - t * s / sqrt(n), m + t * s / sqrt(n))
data_read_4 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/austen.txt",header=TRUE)
head(data_read_4) # how does the data looks like
data_read_4
sense = data_read_4$Sense
emma = data_read_4$Emma
sand1 = data_read_4$Sand1
x=as.data.frame(matrix(c(sense, emma, sand1),ncol=3,nrow=6))
dimnames(x)=list(c("a","an", "this", "that", "with", "without"),c("sense","emma", "sand1"))
x
z = chisq.test(x)
z
z$expected
z$observed
data_read_4 = read.table("/Users/rinusvangrunsven/Documents/Study/UvA/SSO/week2/austen.txt",header=TRUE)
head(data_read_4) # how does the data looks like
data_read_4
library(tidyverse) # or library(tidyr)
library(tidyverse) # or library(tidyr)
library(rlang)
detach("package:rlang", unload = TRUE)
install.packages("tidyverse")
library(tidyverse) # or library(tidyr)
dataf <- dataf %>%
unite("DM", sense:emma:)
df$x <- paste(sense,emma, sand1)
sense = data_read_4$Sense
emma = data_read_4$Emma
sand1 = data_read_4$Sand1
x=as.data.frame(matrix(c(sense, emma, sand1),ncol=3,nrow=6))
dimnames(x)=list(c("a","an", "this", "that", "with", "without"),c("sense","emma", "sand1"))
x
df$x <- paste(sense,emma, sand1)
sense = data_read_4$Sense
emma = data_read_4$Emma
sand1 = data_read_4$Sand1
x=as.data.frame(matrix(c(sense, emma, sand1),ncol=3,nrow=6))
dimnames(x)=list(c("a","an", "this", "that", "with", "without"),c("sense","emma", "sand1"))
x
sense = data_read_4$Sense
emma = data_read_4$Emma
sand1 = data_read_4$Sand1
x=as.data.frame(matrix(c(sense, emma, sand1),ncol=3,nrow=6))
dimnames(x)=list(c("a","an", "this", "that", "with", "without"),c("sense","emma", "sand1"))
x
z = chisq.test(x)
z
z$expected
z$observed
z = chisq.test(x)
z
hist(data_read_1$birthweight, main="Histogram birthweight", xlab="Gram")
par(mfrow=c(1,3))
hist(data_read_1$birthweight, main="Histogram birthweight", xlab="Gram")
boxplot(data_read_1$birthweight, main="Boxplot birthweight", ylab="Gram")
qqnorm(data_read_1$birthweight, main="QQ-plot birthweight")
shapiro.test(data_read_1$birthweight)
setwd("~/Documents/GitHub/SSO-group26/assignment2")
data_sat = read.table("./sat.txt", header=TRUE)
data_sat
summary(data_sat)
c(length(data_sat))
expend = data_sat$expend
ratio = data_sat$ratio
salary = data_sat$salary
takers = data_sat$takers
total = data_sat$total
data_sat = read.table("./sat.txt", header=TRUE)
expend = data_sat$expend
ratio = data_sat$ratio
salary = data_sat$salary
takers = data_sat$takers
total = data_sat$total
# Step-up method
# First round
summary(lm(total~expend)) # multipled R^2 = 0,1448, p-value = 0.00641
summary(lm(total~ratio)) # multipled R^2 = 0.006602, p-value = 0.575
summary(lm(total~salary)) # multipled R^2 = 0.1935, p-value = 0.00139
summary(lm(total~takers)) # multipled R^2 = 0.787, p-value = <2e-16 --> choose this one first
# Second round
summary(lm(total~takers+expend)) # multipled R^2 = 0.8195, p-value = 0.00553 --> choose this one second
summary(lm(total~takers+ratio)) # multipled R^2 = 0.7991, p-value = 0.0982
summary(lm(total~takers+salary)) # multipled R^2 = 0.8056, p-value = 0.0394
# Third round
summary(lm(total~takers+expend+ratio)) # multipled R^2 = 0.8227, p-value = 0.3629
summary(lm(total~takers+expend+salary)) # multipled R^2 = 0.8196, p-value = 0.8527
# stop after second round as the p-values are both not significant
install.packages("ggplot2")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
# Step-up method
# First round
summary(lm(total~expend)) # multipled R^2 = 0,1448, p-value = 0.00641
summary(lm(total~ratio)) # multipled R^2 = 0.006602, p-value = 0.575
summary(lm(total~salary)) # multipled R^2 = 0.1935, p-value = 0.00139
summary(lm(total~takers)) # multipled R^2 = 0.787, p-value = <2e-16 --> choose this one first
# Second round
summary(lm(total~takers+expend)) # multipled R^2 = 0.8195, p-value = 0.00553 --> choose this one second
summary(lm(total~takers+ratio)) # multipled R^2 = 0.7991, p-value = 0.0982
summary(lm(total~takers+salary)) # multipled R^2 = 0.8056, p-value = 0.0394
# Third round
summary(lm(total~takers+expend+ratio)) # multipled R^2 = 0.8227, p-value = 0.3629
summary(lm(total~takers+expend+salary)) # multipled R^2 = 0.8196, p-value = 0.8527
# stop after second round as the p-values are both not significant
install.packages("ggplot2")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
data_sat = read.table("./sat.txt", header=TRUE)
expend = data_sat$expend
ratio = data_sat$ratio
salary = data_sat$salary
takers = data_sat$takers
total = data_sat$total
summary(lm(total~takers+takers2+expend))
data_sat = read.table("./sat.txt", header=TRUE)
data_sat
expend = data_sat$expend
ratio = data_sat$ratio
salary = data_sat$salary
takers = data_sat$takers
total = data_sat$total
summary(lm(total~takers+takers2+expend))
takers2=(data_sat$takers)^2
summary(lm(total~takers+takers2+expend))
chosen_model = lm(total~takers+takers2+expend)
# model = 1052 - 6.381 * takers + 0.04741 * takers2 + 7.914 * expend
newxdata = data.frame(expend=5, takers2=625, salary=36000, takers=25)
predict(chosen_model,newxdata,interval="prediction",level=0.95)
